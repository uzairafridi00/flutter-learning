

	width: double.infinity     // Takes full Width of Screen

		
		// Both are used to Align the items in ROWS AND COLUMNS	

	crossAxisAlignment
	mainAxisAlignment


______________________________________________________________________________
==============================================================================


	You can't directyl apply margin and padding to Card Widget.
	For this reason you need to wrap your Column, row or Card Widget 
	in Container to apply styles.

	ctrl + shift + R      // Refactoring the Widget or Wrapping shortcut


padding: EdgeInsets.all(10)

______________________________________________________________________________
==============================================================================


	TextField() => Contains alot of Pre-defined methods.

	You can go throw them with official documentation


TextField(decoration: InputDecoration(labelText: 'Title'),),

FlatButton(child:Text('Add'), textColor.purple, onPressed: () {})


	onPressed: () {}           // Anonymous Function



	For moving button to the right, give crossAxisAlignment to Column
	to shift button to the right.



______________________________________________________________________________
==============================================================================
		
		Column or ROW overflowed



	Add scrolling to col or row to avoid this
	
	SingleChildScrollView() => Wrap the column or row to avoid the error overflowed

	
	
______________________________________________________________________________
==============================================================================



		ONLY NUMBERS TO ENTER


TextField(
            decoration: InputDecoration(labelText: 'Amount'),
            keyboardType: TextInputType.number,
            inputFormatters: <TextInputFormatter>[
              FilteringTextInputFormatter.digitsOnly
            ], // Only numbers can be entered
            controller: amountController,
          ),




______________________________________________________________________________
==============================================================================


		LIST VIEW WIDGET

	ListView is a column with Scroll View, has infinite height
	ListView gives us the Scrollable functionality -> remove column and use this
	
	You can also decide the ScrollDirection if you want Row Scrollable
	
	But with this you can wrap the ListView with Container to give height to avoid infinite height.
	
	Always use ListView.builder => because in this flutter only loads the list which is visible.
	so it will save your memory.



ListView.builder (
	itemBuilder: (context, index) {
		return Card ()     // All your Card -> No need to use map here because builder will do all the work
	}
),

itemCount: transactions.length,

______________________________________________________________________________
==============================================================================


		TEXTFIELD

keyboardType: TextInputType.number     // Android

keyboardType: TextInputType.numberWithOptions(decimal:true)      // IOS


		// For adding the Transaction with entered
		// You need to create a function and passed that to TextField with onSubmitted



void dataEntered() {
    final titleEntered = titleController.text;
    final amountEntered = double.parse(amountController.text);

    if (titleEntered.isEmpty || amountEntered <= 0) {
      return;
    }

    addTransactionHandler(titleEntered, amountEntered);
}


		// Sometimes flutter will give you an error about void and String Argument
		// So you can use the _ sign to avoid that issue

onSubmitted: (_) => dataEntered(),




______________________________________________________________________________
==============================================================================
			
			PASSING ARGUMENT BUT DON'T WANT TO ACCEPT IT

(_) => submitDate  => here underscore means that this function accepts the argument but We don't care about it

______________________________________________________________________________
==============================================================================


		ADDING ICONS IN FLUTTER
		

IconButton(onPressed: () {}, icon: Icon(Icons.add))


	// Icons.  => Will contain all the Icons which will help you in your App making
	

		// FLOATING ACTION BUTTON

floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
      floatingActionButton: FloatingActionButton(
        child: Icon(Icons.add),
        onPressed: () {},
      ),
______________________________________________________________________________
==============================================================================


		Stateful Widget

	widget.   => can access all the data or functions


Navigator.of(context).pop();

	// It will auto close the Modal sheet when you hit the submit button




______________________________________________________________________________
==============================================================================

		STACK Widget

	This allow us to put elements on top of other Widgets in 3D 

	it's a Z-Axis


______________________________________________________________________________
==============================================================================

		FITTED BOX  => Widget

	Forces the child into available space

	Creates a widget that scales and positions its child within itself according to [fit]

______________________________________________________________________________
==============================================================================

		FLEXIBLE => Widget


	Creates a widget that controls how a child of a [Row], [Column], or [Flex] flexes.

	Can take more space in Row or Column of a container by wrapping it in Container.
	

Flexible (
	fit: FlexFit.loose    //it means that the size use by Rows/Cols in surrounding is to keep that same
	
		// OR

	fit: FlexFit.tight    // fits the things according to shape.

		

	flex: 2			// It grew the container
)



Expanded  => fit: FlexFit.tight     // Replacement of fit => tight



______________________________________________________________________________
==============================================================================

		PADDING => Widget	

	Creates a widget that insets its child.
	The [padding] argument must not be null.


padding: EdgeInsets.all(10),



______________________________________________________________________________
==============================================================================

		ListTile()       => Widget	
		CircleAvatar()   => Widget


ListTile(leading: CircleAvatar())

leading

title & subtitle      // are the features of ListTile widget

trainling		// Element at the end of ListTile
	

	
______________________________________________________________________________
==============================================================================

		TRAILING WIDGET

		


______________________________________________________________________________
==============================================================================





______________________________________________________________________________
==============================================================================





______________________________________________________________________________
==============================================================================