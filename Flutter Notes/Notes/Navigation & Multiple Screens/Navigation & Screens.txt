		Screen or Widget or Page or Route   => Same thing
	
	// but typically any Widget which uses Scaffold is called a Screen Widget.
	// Scaffoled makes our screen.


	// Its not hard and fast rule to name your app using screen keyword.
	// but it will helpful in identifying the screens easily.


categories_screen.dart   // => Good Approach


__________________________________________________________________________
==========================================================================

			Registring a Screen as the Main Screen

	// Register your Widget to -> home: MyWidget()
	// Now your MyWidget() screen or widget should have Scaffoled with it
	// because without Scaffoled you can't make a Screen.


Scaffoled(

appBar: appBar(title: Text('MyApp'))
body: YourWidgetCode....

)


	// Now your Screen is prepared to display as a Main Screen



__________________________________________________________________________
==========================================================================

			NAVIGATION to A NEW SCREEN


Navigator.of(context)       // This is a flutter class which takes the context argument
			    // with push and pop values

	
	// When we Navigate between pages we manage the pages as Stack of Pages
	// Pages are managed as Stack

	// We remove and add pages on Stack.
	// push and pop the page on Stack and Top-most page is visible


	// Final Code



	// Here we used "_" 
	// because when we don't need the context we just passed this



void selectCategory(BuildContext ctx) {
    Navigator.of(ctx).push(MaterialPageRoute(builder: (_) {
      return CategoriesMealsScreen();
    },),);
  }


		// When passing to the Widget		

onTap: () => selectCategory(context)



__________________________________________________________________________
==========================================================================

		
		Replacing PAGE instead of PUSHING

Navigator.of(context).pushReplacementNamed('/');

pushReplacementNamed

	OR
	
pushReplacement

	// Replace the current route of the navigator by pushing the 
	// route named [routeName] and then disposing the 
	// previous route once the new route has finished animating in.


	// Flutter recognized it and don't give back navigation to go back
	// It also saves memory because it will not put the pages on Stack of each other
	// but delete the previous one and bring new page.

	// Sometimes we don't want the user to go back but instead we replace the existing page
	// User Auth -> when you hit login so we don't want the user to go back to Login Page
	// we redirect the user to Main page

	// It will avoid the infinite amount of pages on Stack which will cause memory overflow



__________________________________________________________________________
==========================================================================

		POPPING PAGES & PASSING DATA BACK

Navigator.of(context).pop()    // -> removes the screen which are on top of Stack
	
	//  


__________________________________________________________________________
==========================================================================





__________________________________________________________________________
==========================================================================




__________________________________________________________________________
==========================================================================
	
	